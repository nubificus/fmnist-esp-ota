cmake_minimum_required(VERSION 3.5)
set(CMAKE_CXX_STANDARD 17)
include($ENV{IDF_PATH}/tools/cmake/project.cmake)

# Set default values for environment variables
if(DEFINED ENV{FIRMWARE_VERSION})
	add_compile_definitions(FIRMWARE_VERSION=\"$ENV{FIRMWARE_VERSION}\")
else()
	add_compile_definitions(FIRMWARE_VERSION="0.1.0")
	message(WARNING "FIRMWARE_VERSION is not set, using default value")
endif()

if(DEFINED ENV{DEVICE_TYPE})
	add_compile_definitions(DEVICE_TYPE=\"$ENV{DEVICE_TYPE}\")
else()
	add_compile_definitions(DEVICE_TYPE="esp32s3")
	message(WARNING "DEVICE_TYPE is not set, using default value")
endif()

if(DEFINED ENV{APPLICATION_TYPE})
	add_compile_definitions(APPLICATION_TYPE=\"$ENV{APPLICATION_TYPE}\")
else()
	add_compile_definitions(APPLICATION_TYPE="fmnist")
	message(WARNING "APPLICATION_TYPE is not set, using default value")
endif()

if(DEFINED ENV{WIFI_SSID})
	add_compile_definitions(WIFI_SSID=\"$ENV{WIFI_SSID}\")
else()
	add_compile_definitions(WIFI_SSID="guest")
	message(WARNING "WIFI_SSID is not set, using default value")
endif()

if(DEFINED ENV{WIFI_PASS})
	add_compile_definitions(WIFI_PASS=\"$ENV{WIFI_PASS}\")
else()
	add_compile_definitions(WIFI_PASS="guest")
	message(WARNING "WIFI_PASS is not set, using default value")
endif()

# Conditionally define the STOCK and OTA_SECURE macros
if(DEFINED ENV{STOCK})
	add_compile_definitions(STOCK)
	message("OTA update disabled")
else()
	message(WARNING "OTA update enabled")
endif()

if(DEFINED ENV{OTA_SECURE})
	add_compile_definitions(OTA_SECURE)
	message("Secure OTA update enabled")
else()
	message(WARNING "Secure OTA update disabled")
endif()

project(FMNIST)