cmake_minimum_required(VERSION 3.5)
set(CMAKE_CXX_STANDARD 17)
include($ENV{IDF_PATH}/tools/cmake/project.cmake)

# Set default values for environment variables
if(DEFINED ENV{FIRMWARE_VERSION})
	add_compile_definitions(FIRMWARE_VERSION=\"$ENV{FIRMWARE_VERSION}\")
else()
	add_compile_definitions(FIRMWARE_VERSION="1.1.1")
	message(WARNING "FIRMWARE_VERSION is not set, using default value")
endif()

if(DEFINED ENV{DEVICE_TYPE})
	add_compile_definitions(DEVICE_TYPE=\"$ENV{DEVICE_TYPE}\")
else()
	add_compile_definitions(DEVICE_TYPE="esp32s3")
	message(WARNING "DEVICE_TYPE is not set, using default value")
endif()

if(DEFINED ENV{APPLICATION_TYPE})
	add_compile_definitions(APPLICATION_TYPE=\"$ENV{APPLICATION_TYPE}\")
else()
	add_compile_definitions(APPLICATION_TYPE="simple_cnn")
	message(WARNING "APPLICATION_TYPE is not set, using default value")
endif()

if (DEFINED ENV{TFLITE_MODEL_SIZE})
	math(EXPR TFLITE_MODEL_SIZE_VALUE "$ENV{TFLITE_MODEL_SIZE}")
	add_compile_definitions(TFLITE_MODEL_SIZE=${TFLITE_MODEL_SIZE_VALUE})
	message("TFLITE_MODEL_SIZE is set to ${TFLITE_MODEL_SIZE_VALUE}")
else()
	message(FATAL_ERROR "TFLITE_MODEL_SIZE is not set")
endif()

if (DEFINED ENV{TENSOR_ALLOCATION_SPACE})
	math(EXPR TENSOR_ALLOCATION_SPACE_VALUE "$ENV{TENSOR_ALLOCATION_SPACE}")
	add_compile_definitions(TENSOR_ALLOCATION_SPACE=${TENSOR_ALLOCATION_SPACE_VALUE})
	message("TENSOR_ALLOCATION_SPACE is set to ${TENSOR_ALLOCATION_SPACE_VALUE}")
else()
	math(EXPR TENSOR_ALLOCATION_SPACE_VALUE "200 * 1024")
	add_compile_definitions(TENSOR_ALLOCATION_SPACE=${TENSOR_ALLOCATION_SPACE_VALUE})
	message(WARNING "TENSOR_ALLOCATION_SPACE is not set, using default value 200KB")
endif()

if(DEFINED ENV{LOAD_MODEL_FROM_PARTITION})
	add_compile_definitions(LOAD_MODEL_FROM_PARTITION)
	message("Loading model from flash partition")
else()
	message(WARNING "Loading model from the micro_model.cpp file")
endif()

if(DEFINED ENV{INTERNAL_MEMORY_USAGE})
	add_compile_definitions(INTERNAL_MEMORY_USAGE)
	message("Using internal RAM for model")
else()
	message(WARNING "Using external PSRAM for model")
endif()

if(DEFINED ENV{WIFI_SSID})
	add_compile_definitions(WIFI_SSID=\"$ENV{WIFI_SSID}\")
else()
	add_compile_definitions(WIFI_SSID="guest")
	message(WARNING "WIFI_SSID is not set, using default value")
endif()

if(DEFINED ENV{WIFI_PASS})
	add_compile_definitions(WIFI_PASS=\"$ENV{WIFI_PASS}\")
else()
	add_compile_definitions(WIFI_PASS="guest")
	message(WARNING "WIFI_PASS is not set, using default value")
endif()

# Conditionally define the STOCK and OTA_SECURE macros
if(DEFINED ENV{STOCK})
	add_compile_definitions(STOCK)
	message("OTA update disabled")
else()
	message(WARNING "OTA update enabled")
endif()

if(DEFINED ENV{OTA_SECURE})
	add_compile_definitions(OTA_SECURE)
	message("Secure OTA update enabled")
else()
	message(WARNING "Secure OTA update disabled")
endif()

project(esp_tflite_app)